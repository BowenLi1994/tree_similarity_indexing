looking up: 
r id: 0 r size: 2
**<-- Generate pre candidates -->**
small tree
probing the tau +1 nodes
r[p]: r[0] r[p].id: 2
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 0
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
r[p]: r[1] r[p].id: 4
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 0
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
set data: 
set[0] : overlap: 0 prefix: 2
set[1] : overlap: 0 prefix: 0
set[2] : overlap: 0 prefix: 0
set[3] : overlap: 0 prefix: 0
set[4] : overlap: 0 prefix: 0
set[5] : overlap: 0 prefix: 0
updated iverted list: 
il[0]: offset: 0
elment list: 
il[1]: offset: 0
elment list: 
il[2]: offset: 0
elment list: 
pair: 0 0
il[3]: offset: 0
elment list: 
il[4]: offset: 0
elment list: 
pair: 0 1
**<-- Verify pre candidates -->**
r id: 1 r size: 4
**<-- Generate pre candidates -->**
probing the tau +1 nodes
r[p]: r[0] r[p].id: 0
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 0
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
r[p]: r[1] r[p].id: 2
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 0
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
strucural mapping
 set in tree T: 2
 set in tree T': 2
T and T's only has one such label
tau vaild: 1
r[p]: r[2] r[p].id: 3
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 0
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
r[p]: r[3] r[p].id: 4
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 0
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
strucural mapping
 set in tree T: 4
 set in tree T': 4
T and T's only has one such label
tau vaild: 1
set data: 
set[0] : overlap: 2 prefix: 2
set[1] : overlap: 0 prefix: 4
set[2] : overlap: 0 prefix: 0
set[3] : overlap: 0 prefix: 0
set[4] : overlap: 0 prefix: 0
set[5] : overlap: 0 prefix: 0
updated iverted list: 
il[0]: offset: 0
elment list: 
pair: 1 0
il[1]: offset: 0
elment list: 
il[2]: offset: 0
elment list: 
pair: 0 0
pair: 1 1
il[3]: offset: 0
elment list: 
pair: 1 2
il[4]: offset: 0
elment list: 
pair: 0 1
pair: 1 3
**<-- Verify pre candidates -->**
m: 0
 probing T  smaller than T' in canidate set
pr: 4 ps: 2
maxr: 2 maxs: 2
eqoverlap: 2
structural filter 
r id: 2 r size: 6
**<-- Generate pre candidates -->**
probing the tau +1 nodes
r[p]: r[0] r[p].id: 1
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 0
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
r[p]: r[1] r[p].id: 2
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 1
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
strucural mapping
 set in tree T: 2
 set in tree T': 2
T and T's only has one such label
tau vaild: 1
r[p]: r[2] r[p].id: 3
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 1
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
strucural mapping
 set in tree T: 3
 set in tree T': 3
neighter of them has mutilple labels
se weight: 1
le weight: 2
left side k window: 1
pid_lower_bound_start: 0
tau vaild: 1
set data: 
set[0] : overlap: 0 prefix: 2
set[1] : overlap: 2 prefix: 4
set[2] : overlap: 0 prefix: 3
set[3] : overlap: 0 prefix: 0
set[4] : overlap: 0 prefix: 0
set[5] : overlap: 0 prefix: 0
updated iverted list: 
il[0]: offset: 0
elment list: 
pair: 1 0
il[1]: offset: 0
elment list: 
pair: 2 0
il[2]: offset: 1
elment list: 
pair: 0 0
pair: 1 1
pair: 2 1
il[3]: offset: 0
elment list: 
pair: 1 2
pair: 2 2
il[4]: offset: 0
elment list: 
pair: 0 1
pair: 1 3
**<-- Verify pre candidates -->**
m: 1
 probing T  smaller than T' in canidate set
pr: 3 ps: 2
maxr: 4 maxs: 4
eqoverlap: 4
structural filter 
checking step: 
r id: 3 r size: 6
**<-- Generate pre candidates -->**
probing the tau +1 nodes
r[p]: r[0] r[p].id: 1
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 1
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
strucural mapping
 set in tree T: 1
 set in tree T': 1
T and T's only has one such label
tau vaild: 0
r[p]: r[1] r[p].id: 2
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 1
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
strucural mapping
 set in tree T: 2
 set in tree T': 2
T and T's only has one such label
tau vaild: 0
strucural mapping
 set in tree T: 2
 set in tree T': 2
T and T's only has one such label
tau vaild: 0
r[p]: r[2] r[p].id: 3
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 1
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
strucural mapping
 set in tree T: 3
 set in tree T': 3
neighter of them has mutilple labels
se weight: 1
le weight: 2
left side k window: 1
pid_lower_bound_start: 0
tau vaild: 1
strucural mapping
 set in tree T: 3
 set in tree T': 3
neighter of them has mutilple labels
se weight: 2
le weight: 2
left side k window: 1
pid_lower_bound_start: 0
left side k window: 2
pid_lower_bound_start: 0
tau vaild: 2
set data: 
set[0] : overlap: 0 prefix: 2
set[1] : overlap: 1 prefix: 4
set[2] : overlap: 2 prefix: 3
set[3] : overlap: 0 prefix: 3
set[4] : overlap: 0 prefix: 0
set[5] : overlap: 0 prefix: 0
updated iverted list: 
il[0]: offset: 0
elment list: 
pair: 1 0
il[1]: offset: 0
elment list: 
pair: 2 0
pair: 3 0
il[2]: offset: 1
elment list: 
pair: 0 0
pair: 1 1
pair: 2 1
pair: 3 1
il[3]: offset: 0
elment list: 
pair: 1 2
pair: 2 2
pair: 3 2
il[4]: offset: 0
elment list: 
pair: 0 1
pair: 1 3
**<-- Verify pre candidates -->**
m: 1
 probing T  smaller than T' in canidate set
pr: 3 ps: 1
maxr: 3 maxs: 4
eqoverlap: 4
structural filter 
m: 2
 probing T  smaller than T' in canidate set
pr: 3 ps: 2
maxr: 4 maxs: 6
eqoverlap: 4
structural filter 
checking step: 
checking step: 
strucural mapping
 set in tree T: 4
 set in tree T': 4
neighter of them has mutilple labels
se weight: 2
le weight: 2
left side k window: 0
pid_lower_bound_start: 0
left side k window: 4
pid_lower_bound_start: 2
r id: 4 r size: 6
**<-- Generate pre candidates -->**
probing the tau +1 nodes
r[p]: r[0] r[p].id: 1
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 1
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
strucural mapping
 set in tree T: 1
 set in tree T': 1
T and T's only has one such label
tau vaild: 0
strucural mapping
 set in tree T: 1
 set in tree T': 1
T and T's only has one such label
tau vaild: 0
r[p]: r[1] r[p].id: 2
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 1
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
strucural mapping
 set in tree T: 2
 set in tree T': 2
T and T's only has one such label
tau vaild: 1
strucural mapping
 set in tree T: 2
 set in tree T': 2
T and T's only has one such label
tau vaild: 1
strucural mapping
 set in tree T: 2
 set in tree T': 2
T and T's only has one such label
tau vaild: 0
r[p]: r[2] r[p].id: 3
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 1
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
strucural mapping
 set in tree T: 3
 set in tree T': 3
neighter of them has mutilple labels
se weight: 1
le weight: 2
left side k window: 1
pid_lower_bound_start: 0
tau vaild: 0
strucural mapping
 set in tree T: 3
 set in tree T': 3
neighter of them has mutilple labels
se weight: 2
le weight: 2
left side k window: 0
pid_lower_bound_start: 0
left side k window: 3
pid_lower_bound_start: 0
tau vaild: 0
strucural mapping
 set in tree T: 3
 set in tree T': 3
neighter of them has mutilple labels
se weight: 2
le weight: 2
left side k window: 0
pid_lower_bound_start: 0
left side k window: 3
pid_lower_bound_start: 0
tau vaild: 1
set data: 
set[0] : overlap: 0 prefix: 2
set[1] : overlap: 1 prefix: 4
set[2] : overlap: 1 prefix: 3
set[3] : overlap: 1 prefix: 3
set[4] : overlap: 0 prefix: 3
set[5] : overlap: 0 prefix: 0
updated iverted list: 
il[0]: offset: 0
elment list: 
pair: 1 0
il[1]: offset: 0
elment list: 
pair: 2 0
pair: 3 0
pair: 4 0
il[2]: offset: 1
elment list: 
pair: 0 0
pair: 1 1
pair: 2 1
pair: 3 1
pair: 4 1
il[3]: offset: 0
elment list: 
pair: 1 2
pair: 2 2
pair: 3 2
pair: 4 2
il[4]: offset: 0
elment list: 
pair: 0 1
pair: 1 3
**<-- Verify pre candidates -->**
m: 1
 probing T  smaller than T' in canidate set
pr: 3 ps: 1
maxr: 3 maxs: 4
eqoverlap: 4
structural filter 
m: 2
 probing T  smaller than T' in canidate set
pr: 3 ps: 1
maxr: 3 maxs: 6
eqoverlap: 4
structural filter 
m: 3
 probing T  smaller than T' in canidate set
pr: 3 ps: 1
maxr: 3 maxs: 6
eqoverlap: 4
structural filter 
r id: 5 r size: 6
**<-- Generate pre candidates -->**
probing the tau +1 nodes
r[p]: r[0] r[p].id: 0
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 1
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
strucural mapping
 set in tree T: 0
 set in tree T': 0
T and T's only has one such label
tau vaild: 1
r[p]: r[1] r[p].id: 1
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 1
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
strucural mapping
 set in tree T: 1
 set in tree T': 1
T and T's only has one such label
tau vaild: 0
strucural mapping
 set in tree T: 1
 set in tree T': 1
T and T's only has one such label
tau vaild: 0
strucural mapping
 set in tree T: 1
 set in tree T': 1
T and T's only has one such label
tau vaild: 0
r[p]: r[2] r[p].id: 3
iverted list: updating offset
il[0]: offset: 0
il[1]: offset: 0
il[2]: offset: 1
il[3]: offset: 0
il[4]: offset: 0
 finding candidates
strucural mapping
 set in tree T: 3
 set in tree T': 3
neighter of them has mutilple labels
se weight: 1
le weight: 2
left side k window: 1
pid_lower_bound_start: 0
tau vaild: 1
strucural mapping
 set in tree T: 3
 set in tree T': 3
neighter of them has mutilple labels
se weight: 2
le weight: 2
left side k window: 0
pid_lower_bound_start: 0
left side k window: 3
pid_lower_bound_start: 0
tau vaild: 1
strucural mapping
 set in tree T: 3
 set in tree T': 3
neighter of them has mutilple labels
se weight: 2
le weight: 2
left side k window: 0
pid_lower_bound_start: 0
left side k window: 3
pid_lower_bound_start: 0
tau vaild: 1
strucural mapping
 set in tree T: 3
 set in tree T': 3
neighter of them has mutilple labels
se weight: 2
le weight: 2
left side k window: 0
pid_lower_bound_start: 0
left side k window: 3
pid_lower_bound_start: 1
tau vaild: 2
set data: 
set[0] : overlap: 0 prefix: 2
set[1] : overlap: 2 prefix: 4
set[2] : overlap: 1 prefix: 3
set[3] : overlap: 1 prefix: 3
set[4] : overlap: 2 prefix: 3
set[5] : overlap: 0 prefix: 3
updated iverted list: 
il[0]: offset: 0
elment list: 
pair: 1 0
pair: 5 0
il[1]: offset: 0
elment list: 
pair: 2 0
pair: 3 0
pair: 4 0
pair: 5 1
il[2]: offset: 1
elment list: 
pair: 0 0
pair: 1 1
pair: 2 1
pair: 3 1
pair: 4 1
il[3]: offset: 0
elment list: 
pair: 1 2
pair: 2 2
pair: 3 2
pair: 4 2
pair: 5 2
il[4]: offset: 0
elment list: 
pair: 0 1
pair: 1 3
**<-- Verify pre candidates -->**
m: 1
 probing T  smaller than T' in canidate set
pr: 3 ps: 2
maxr: 4 maxs: 4
eqoverlap: 4
structural filter 
checking step: 
m: 2
 probing T  smaller than T' in canidate set
pr: 3 ps: 1
maxr: 3 maxs: 6
eqoverlap: 4
structural filter 
m: 3
 probing T  smaller than T' in canidate set
pr: 3 ps: 1
maxr: 3 maxs: 6
eqoverlap: 4
structural filter 
m: 4
 probing T  smaller than T' in canidate set
pr: 3 ps: 2
maxr: 4 maxs: 6
eqoverlap: 4
structural filter 
checking step: 
checking step: 
strucural mapping
 set in tree T: 4
 set in tree T': 4
neighter of them has mutilple labels
se weight: 2
le weight: 2
left side k window: 0
pid_lower_bound_start: 0
left side k window: 4
pid_lower_bound_start: 1
